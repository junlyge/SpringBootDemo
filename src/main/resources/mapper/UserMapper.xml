<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lj.test.demo.dao.UserMapper">
    <resultMap id="baseResultMap" type="com.lj.test.demo.model.User">
        <id column="id" property="id" jdbcType="BIGINT"  />
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="department" property="department" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="baseColumnList" >
        id, name, password, department, age, address
    </sql>

    <select id="queryUserList" resultMap="baseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="baseColumnList" />
        from user
        <where>
            1 = 1
            <if test="name!= null and name !=''">
                AND name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="department != null and department !=''">
                AND department like  CONCAT(CONCAT('%',#{department,jdbcType=VARCHAR}),'%')
            </if>

        </where>
    </select>

    <select id="queryUserById"  resultMap="baseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="baseColumnList" />
        FROM user
        WHERE id = #{id}
    </select>

    <insert id="add" parameterType="com.lj.test.demo.model.User" >
        INSERT INTO user (name,password,age,department,address) VALUES (#{name}, #{password}, #{age},#{department},#{address})
    </insert>

    <update id="update" parameterType="com.lj.test.demo.model.User" >
        UPDATE user SET name = #{name},password = #{password},age = #{age},department = #{department},address = #{address} WHERE id = #{id}
    </update>

    <delete id="deleteByIds" parameterType="java.lang.String" >
        DELETE FROM user WHERE id in
        <foreach item="idItem" collection="array" open="(" separator="," close=")">
            #{idItem}
        </foreach>
    </delete>
</mapper>